{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/snadk/Documents/GitHub/Zoom-Next.js/Zoom-Next.js-v0/src/lib/zoom-api.ts"],"sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport axios from 'axios';\r\nimport { ZoomMeeting, ZoomRecording } from '@/types/zoom';\r\n\r\nconst ZOOM_API_BASE_URL = 'https://api.zoom.us/v2';\r\n\r\n// Generate JWT token for Zoom API authentication\r\nexport function generateZoomJWT(): string {\r\n  const payload = {\r\n    iss: process.env.ZOOM_API_KEY,\r\n    exp: Math.floor(Date.now() / 1000) + (60 * 60) // 1 hour expiration\r\n  };\r\n  \r\n  return jwt.sign(payload, process.env.ZOOM_API_SECRET!);\r\n}\r\n\r\n// Generate SDK JWT for Zoom Video SDK\r\nexport function generateSDKJWT(sessionName: string, userIdentity: string, roleType: number = 1): string {\r\n  const payload = {\r\n    iss: process.env.ZOOM_SDK_KEY,\r\n    exp: Math.floor(Date.now() / 1000) + (60 * 60 * 2), // 2 hours\r\n    alg: 'HS256',\r\n    aud: 'zoom',\r\n    appKey: process.env.ZOOM_SDK_KEY,\r\n    tokenExp: Math.floor(Date.now() / 1000) + (60 * 60 * 2),\r\n    sessionName,\r\n    userIdentity,\r\n    roleType\r\n  };\r\n  \r\n  return jwt.sign(payload, process.env.ZOOM_SDK_SECRET!);\r\n}\r\n\r\n// Create a new Zoom meeting\r\nexport async function createZoomMeeting(meetingData: {\r\n  topic: string;\r\n  type: number;\r\n  start_time?: string;\r\n  duration?: number;\r\n  timezone?: string;\r\n  agenda?: string;\r\n  settings?: {\r\n    host_video?: boolean;\r\n    participant_video?: boolean;\r\n    join_before_host?: boolean;\r\n    mute_upon_entry?: boolean;\r\n    watermark?: boolean;\r\n    use_pmi?: boolean;\r\n    approval_type?: number;\r\n    audio?: string;\r\n    auto_recording?: string;\r\n    cloud_recording_election?: boolean;\r\n  };\r\n}): Promise<ZoomMeeting> {\r\n  const token = generateZoomJWT();\r\n  \r\n  try {\r\n    const response = await axios.post(\r\n      `${ZOOM_API_BASE_URL}/users/me/meetings`,\r\n      {\r\n        ...meetingData,\r\n        settings: {\r\n          host_video: true,\r\n          participant_video: true,\r\n          join_before_host: false,\r\n          mute_upon_entry: true,\r\n          watermark: false,\r\n          use_pmi: false,\r\n          approval_type: 2,\r\n          audio: 'both',\r\n          auto_recording: 'cloud',\r\n          cloud_recording_election: true,\r\n          ...meetingData.settings\r\n        }\r\n      },\r\n      {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n    );\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating Zoom meeting:', error);\r\n    throw new Error('Failed to create Zoom meeting');\r\n  }\r\n}\r\n\r\n// Get meeting details\r\nexport async function getZoomMeeting(meetingId: string): Promise<ZoomMeeting> {\r\n  const token = generateZoomJWT();\r\n  \r\n  try {\r\n    const response = await axios.get(\r\n      `${ZOOM_API_BASE_URL}/meetings/${meetingId}`,\r\n      {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      }\r\n    );\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching Zoom meeting:', error);\r\n    throw new Error('Failed to fetch Zoom meeting');\r\n  }\r\n}\r\n\r\n// List user's meetings\r\nexport async function listZoomMeetings(type: 'scheduled' | 'live' | 'upcoming' = 'scheduled'): Promise<ZoomMeeting[]> {\r\n  const token = generateZoomJWT();\r\n  \r\n  try {\r\n    const response = await axios.get(\r\n      `${ZOOM_API_BASE_URL}/users/me/meetings?type=${type}`,\r\n      {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      }\r\n    );\r\n    \r\n    return response.data.meetings || [];\r\n  } catch (error) {\r\n    console.error('Error listing Zoom meetings:', error);\r\n    throw new Error('Failed to list Zoom meetings');\r\n  }\r\n}\r\n\r\n// Get meeting recordings\r\nexport async function getMeetingRecordings(meetingId: string): Promise<ZoomRecording | null> {\r\n  const token = generateZoomJWT();\r\n  \r\n  try {\r\n    const response = await axios.get(\r\n      `${ZOOM_API_BASE_URL}/meetings/${meetingId}/recordings`,\r\n      {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      }\r\n    );\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 404) {\r\n      return null; // No recordings found\r\n    }\r\n    console.error('Error fetching meeting recordings:', error);\r\n    throw new Error('Failed to fetch meeting recordings');\r\n  }\r\n}\r\n\r\n// Delete a meeting\r\nexport async function deleteZoomMeeting(meetingId: string): Promise<void> {\r\n  const token = generateZoomJWT();\r\n  \r\n  try {\r\n    await axios.delete(\r\n      `${ZOOM_API_BASE_URL}/meetings/${meetingId}`,\r\n      {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      }\r\n    );\r\n  } catch (error) {\r\n    console.error('Error deleting Zoom meeting:', error);\r\n    throw new Error('Failed to delete Zoom meeting');\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/snadk/Documents/GitHub/Zoom-Next.js/Zoom-Next.js-v0/src/app/api/zoom/meetings/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport { createZoomMeeting, listZoomMeetings } from \"../../../../lib/zoom-api\";\r\n\r\nexport async function GET() {\r\n  try {\r\n    const meetings = await listZoomMeetings(\"scheduled\");\r\n    return NextResponse.json(meetings);\r\n  } catch (error) {\r\n    console.error(\"Error fetching meetings:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Failed to fetch meetings\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const meetingData = await request.json();\r\n    const meeting = await createZoomMeeting(meetingData);\r\n    return NextResponse.json(meeting);\r\n  } catch (error) {\r\n    console.error(\"Error creating meeting:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Failed to create meeting\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,2HAAA,CAAA,mBAAgB,AAAD,EAAE;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,cAAc,MAAM,QAAQ,IAAI;QACtC,MAAM,UAAU,MAAM,CAAA,GAAA,2HAAA,CAAA,oBAAiB,AAAD,EAAE;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}